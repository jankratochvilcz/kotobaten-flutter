// Mocks generated by Mockito 5.0.16 from annotations
// in kotobaten/services/repositories/user_repository.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:hooks_riverpod/hooks_riverpod.dart' as _i4;
import 'package:kotobaten/models/user/user.dart' as _i2;
import 'package:kotobaten/services/repositories/user_repository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:state_notifier/state_notifier.dart' as _i6;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeUser_0 extends _i1.Fake implements _i2.User {}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i3.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set onError(_i4.ErrorListener? _onError) =>
      super.noSuchMethod(Invocation.setter(#onError, _onError),
          returnValueForMissingStub: null);
  @override
  bool get mounted =>
      (super.noSuchMethod(Invocation.getter(#mounted), returnValue: false)
          as bool);
  @override
  _i5.Stream<_i2.User> get stream =>
      (super.noSuchMethod(Invocation.getter(#stream),
          returnValue: Stream<_i2.User>.empty()) as _i5.Stream<_i2.User>);
  @override
  _i2.User get state =>
      (super.noSuchMethod(Invocation.getter(#state), returnValue: _FakeUser_0())
          as _i2.User);
  @override
  set state(_i2.User? value) =>
      super.noSuchMethod(Invocation.setter(#state, value),
          returnValueForMissingStub: null);
  @override
  _i2.User get debugState => (super.noSuchMethod(Invocation.getter(#debugState),
      returnValue: _FakeUser_0()) as _i2.User);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i5.Future<dynamic> set(_i2.User? user) =>
      (super.noSuchMethod(Invocation.method(#set, [user]),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  _i2.User get() => (super.noSuchMethod(Invocation.method(#get, []),
      returnValue: _FakeUser_0()) as _i2.User);
  @override
  _i4.RemoveListener addListener(_i6.Listener<_i2.User>? listener,
          {bool? fireImmediately = true}) =>
      (super.noSuchMethod(
          Invocation.method(
              #addListener, [listener], {#fireImmediately: fireImmediately}),
          returnValue: () {}) as _i4.RemoveListener);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}
